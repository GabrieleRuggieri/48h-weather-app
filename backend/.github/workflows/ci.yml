name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ "api-gateway", "user-service", "weather-service", "log-service" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Debug: mostra la directory corrente e l'elenco della radice
      - name: Debug: List repository root
        run: |
          echo "Current directory: $(pwd)"
          ls -la

      # Debug: elenca il contenuto della cartella backend
      - name: Debug: List backend directory
        run: |
          echo "Listing contents of 'backend':"
          ls -la backend

      # Debug: elenca i file nella cartella del microservizio corrente
      - name: Debug: List files in backend/${{ matrix.service }}
        run: |
          echo "Listing files in backend/${{ matrix.service }}:"
          ls -la backend/${{ matrix.service }}

      # Install dependencies nel microservizio corrente
      - name: Install dependencies for ${{ matrix.service }}
        run: |
          cd backend/${{ matrix.service }} && \
          echo "Current directory after cd: $(pwd)" && \
          ls -la && \
          npm install

      # Build project, se lo script "build" Ã¨ definito
      - name: Build project for ${{ matrix.service }}
        run: |
          cd backend/${{ matrix.service }} && \
          echo "Current directory after cd: $(pwd)" && \
          if npm run | grep -q "build"; then \
            npm run build; \
          else \
            echo "No build script defined for ${{ matrix.service }}; skipping build step."; \
          fi