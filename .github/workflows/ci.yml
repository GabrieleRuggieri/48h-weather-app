name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ "api-gateway", "user-service", "weather-service", "log-service" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Step di debug: mostra la directory corrente e la struttura della radice
      - name: Debug: Current directory and list root
        run: |
          echo "Current directory: $(pwd)"
          ls -la

      # Step di debug: elenca la cartella "backend" per verificare la struttura
      - name: Debug: List backend directory
        run: |
          echo "Listing contents of 'backend':"
          ls -la backend

      # Step di debug: elenca la cartella del microservizio corrente
      - name: Debug: List files in backend/${{ matrix.service }}
        run: |
          echo "Listing files in backend/${{ matrix.service }}:"
          ls -la backend/${{ matrix.service }}

      # Install dependencies nel microservizio specifico
      - name: Install dependencies for ${{ matrix.service }}
        working-directory: backend/${{ matrix.service }}
        run: |
          echo "Install step: Current directory: $(pwd)"
          ls -la
          npm install

      # Build project se lo script Ã¨ definito
      - name: Build project for ${{ matrix.service }}
        working-directory: backend/${{ matrix.service }}
        run: |
          echo "Build step: Current directory: $(pwd)"
          if npm run | grep -q "build"; then
            npm run build
          else
            echo "No build script defined for ${{ matrix.service }}; skipping build step."
          fi